# docker-compose.yml (en la raíz: TwitterAPI/docker-compose.yml)
version: '3.8'

services:
  # SQL Server Database
  database.server:
    image: postgres:17.5-alpine
    container_name: database.server
    hostname: database.server
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: TwitterAPI
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: YourStrong@Passw0rd
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - twitterapi-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d TwitterAPI"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # .NET API Application
  twitterapi-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: twitterapi-app
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:8080
      # Connection string para SQL Server
      ConnectionStrings__DefaultConnection: "Host=database.server;Port=5432;Database=TwitterAPI;Username=postgres;Password=YourStrong@Passw0rd;Trust Server Certificate=true"
    ports:
      - "5000:8080"
    depends_on:
      database.server:
        condition: service_healthy
    networks:
      - twitterapi-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
  admin:
    image: adminer
    restart: always
    depends_on: 
      - database.server
    ports:
      - 8080:8080


volumes:
  postgres_data:
    driver: local

networks:
  twitterapi-network:
    driver: bridge